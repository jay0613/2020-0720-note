list01 = [1,2,3,0]
dict01 = {"a":5,"b":8,"c":9}
# 内置高阶函数(还有很多没列出来)
# 1.map（函数，可迭代对象）：使用可迭代对象中的每个元素
#   调用函数，将返回值作为新可迭代对象元素；返回值为新可迭代对象。
# 2.filter(函数，可迭代对象)：根据条件筛选可迭代对象中的元素，返回值为新可迭代对象。
# 3.sorted(可迭代对象，key = 函数,reverse = bool值)：排序，返回值为排序结果。
# Sorted函数会返回排序后新的容器，我们自己做的方法操作的是原来容器，不会生成新的容器，默认是升序，把reverse=True后就变成倒序了
# 4.max(可迭代对象，key = 函数)：根据函数获取可迭代对象的最大值。
# 5.min(可迭代对象，key = 函数)：根据函数获取可迭代对象的最小值。


# number = int("12",8)  # 传进来字符串类型数字转成10进制的整型数字  # 第二个参数可不填默认为10，代表该字符串是10进制  # 参数为字符串或数字,不能为字符串类型的小数。 # 不传入参数时，得到结果0
# a = str(10.5)  # 可以把数字类型的参数转换成字符串
# number = ord("a")  # 返回对应的 ASCII 数值
# str01 = chr(97)  # 返回值是当前整数对应的 ASCII 字符。
# for i,element in enumerate(list01):  # 遍历可迭代对象时，可以将索引与元素组合为一个元组。如果放进去的参数是一个字典，则返回的是字典的“索引”和键
#     print(i,element)    # element为list01里面的元素，i为该元素的索引
# number = eval("3+3")  # 执行一个字符串表达式，并返回表达式的执行结果值
# bool = isinstance(2,int)  # 判断一个对象是否是一个已知的类型   # print(isinstance(s01, Person)) # True   # 学生对象  是一种  人类型



# number = abs(-15)  # 返回该参数的绝对值
# tup = divmod(7,2)  # 把两个参数的商以及余数放到一个元组中返回  # (7//2, 7%2)  # (3, 1)
# bool = all(list01) # 判断给定的可迭代参数 iterable 中的所有元素是否都为 TRUE，如果是返回 True，否则返回 False。#元素除了是 0、空、None、False 外都算 True。
# bool = any(list01)  # 参数list01里面的元素全部为 False，则返回 False，如果有一个为 True，则返回 True。   # 元素除了是 0、空、FALSE 外都算 True。
# number = pow(100,2)  # 返回100的2次方  # 10000
number = sum(list01)  # 对系列进行求和计算


print(number)
# dict() # 函数用于创建一个字典。
# help() # 函数用于查看函数或模块用途的详细说明。